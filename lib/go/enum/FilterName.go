// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package enum

import "strconv"

/// `Query filter names enum.
type FilterName int8

const (
	FilterNameEquals       FilterName = 0
	FilterNameNotEquals    FilterName = 1
	FilterNameContains     FilterName = 2
	FilterNameNotContains  FilterName = 3
	FilterNameStartsWith   FilterName = 4
	FilterNameEndsWith     FilterName = 5
	FilterNameGreater      FilterName = 6
	FilterNameGreaterEqual FilterName = 7
	FilterNameLess         FilterName = 8
	FilterNameLessEqual    FilterName = 9
	FilterNameIsNull       FilterName = 10
	FilterNameIsNotNull    FilterName = 11
	FilterNameBetween      FilterName = 12
)

var EnumNamesFilterName = map[FilterName]string{
	FilterNameEquals:       "Equals",
	FilterNameNotEquals:    "NotEquals",
	FilterNameContains:     "Contains",
	FilterNameNotContains:  "NotContains",
	FilterNameStartsWith:   "StartsWith",
	FilterNameEndsWith:     "EndsWith",
	FilterNameGreater:      "Greater",
	FilterNameGreaterEqual: "GreaterEqual",
	FilterNameLess:         "Less",
	FilterNameLessEqual:    "LessEqual",
	FilterNameIsNull:       "IsNull",
	FilterNameIsNotNull:    "IsNotNull",
	FilterNameBetween:      "Between",
}

var EnumValuesFilterName = map[string]FilterName{
	"Equals":       FilterNameEquals,
	"NotEquals":    FilterNameNotEquals,
	"Contains":     FilterNameContains,
	"NotContains":  FilterNameNotContains,
	"StartsWith":   FilterNameStartsWith,
	"EndsWith":     FilterNameEndsWith,
	"Greater":      FilterNameGreater,
	"GreaterEqual": FilterNameGreaterEqual,
	"Less":         FilterNameLess,
	"LessEqual":    FilterNameLessEqual,
	"IsNull":       FilterNameIsNull,
	"IsNotNull":    FilterNameIsNotNull,
	"Between":      FilterNameBetween,
}

func (v FilterName) String() string {
	if s, ok := EnumNamesFilterName[v]; ok {
		return s
	}
	return "FilterName(" + strconv.FormatInt(int64(v), 10) + ")"
}

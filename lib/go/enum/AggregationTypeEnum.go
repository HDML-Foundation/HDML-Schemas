// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package enum

import "strconv"

/// Aggregation functions enum.
type AggregationTypeEnum int8

const (
	AggregationTypeEnumNone                AggregationTypeEnum = 0
	AggregationTypeEnumCount               AggregationTypeEnum = 1
	AggregationTypeEnumCountDistinct       AggregationTypeEnum = 2
	AggregationTypeEnumCountDistinctApprox AggregationTypeEnum = 3
	AggregationTypeEnumSum                 AggregationTypeEnum = 4
	AggregationTypeEnumAvg                 AggregationTypeEnum = 5
	AggregationTypeEnumMin                 AggregationTypeEnum = 6
	AggregationTypeEnumMax                 AggregationTypeEnum = 7
)

var EnumNamesAggregationTypeEnum = map[AggregationTypeEnum]string{
	AggregationTypeEnumNone:                "None",
	AggregationTypeEnumCount:               "Count",
	AggregationTypeEnumCountDistinct:       "CountDistinct",
	AggregationTypeEnumCountDistinctApprox: "CountDistinctApprox",
	AggregationTypeEnumSum:                 "Sum",
	AggregationTypeEnumAvg:                 "Avg",
	AggregationTypeEnumMin:                 "Min",
	AggregationTypeEnumMax:                 "Max",
}

var EnumValuesAggregationTypeEnum = map[string]AggregationTypeEnum{
	"None":                AggregationTypeEnumNone,
	"Count":               AggregationTypeEnumCount,
	"CountDistinct":       AggregationTypeEnumCountDistinct,
	"CountDistinctApprox": AggregationTypeEnumCountDistinctApprox,
	"Sum":                 AggregationTypeEnumSum,
	"Avg":                 AggregationTypeEnumAvg,
	"Min":                 AggregationTypeEnumMin,
	"Max":                 AggregationTypeEnumMax,
}

func (v AggregationTypeEnum) String() string {
	if s, ok := EnumNamesAggregationTypeEnum[v]; ok {
		return s
	}
	return "AggregationTypeEnum(" + strconv.FormatInt(int64(v), 10) + ")"
}

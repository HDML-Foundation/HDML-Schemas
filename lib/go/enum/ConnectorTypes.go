// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package enum

import "strconv"

/// Database connector type.
type ConnectorTypes int8

const (
	ConnectorTypesPostgres      ConnectorTypes = 0
	ConnectorTypesMySQL         ConnectorTypes = 1
	ConnectorTypesMsSQL         ConnectorTypes = 2
	ConnectorTypesMariaDB       ConnectorTypes = 3
	ConnectorTypesOracle        ConnectorTypes = 4
	ConnectorTypesClickhouse    ConnectorTypes = 5
	ConnectorTypesDruid         ConnectorTypes = 6
	ConnectorTypesIgnite        ConnectorTypes = 7
	ConnectorTypesRedshift      ConnectorTypes = 8
	ConnectorTypesBigQuery      ConnectorTypes = 9
	ConnectorTypesGoogleSheets  ConnectorTypes = 10
	ConnectorTypesElasticSearch ConnectorTypes = 11
	ConnectorTypesMongoDB       ConnectorTypes = 12
)

var EnumNamesConnectorTypes = map[ConnectorTypes]string{
	ConnectorTypesPostgres:      "Postgres",
	ConnectorTypesMySQL:         "MySQL",
	ConnectorTypesMsSQL:         "MsSQL",
	ConnectorTypesMariaDB:       "MariaDB",
	ConnectorTypesOracle:        "Oracle",
	ConnectorTypesClickhouse:    "Clickhouse",
	ConnectorTypesDruid:         "Druid",
	ConnectorTypesIgnite:        "Ignite",
	ConnectorTypesRedshift:      "Redshift",
	ConnectorTypesBigQuery:      "BigQuery",
	ConnectorTypesGoogleSheets:  "GoogleSheets",
	ConnectorTypesElasticSearch: "ElasticSearch",
	ConnectorTypesMongoDB:       "MongoDB",
}

var EnumValuesConnectorTypes = map[string]ConnectorTypes{
	"Postgres":      ConnectorTypesPostgres,
	"MySQL":         ConnectorTypesMySQL,
	"MsSQL":         ConnectorTypesMsSQL,
	"MariaDB":       ConnectorTypesMariaDB,
	"Oracle":        ConnectorTypesOracle,
	"Clickhouse":    ConnectorTypesClickhouse,
	"Druid":         ConnectorTypesDruid,
	"Ignite":        ConnectorTypesIgnite,
	"Redshift":      ConnectorTypesRedshift,
	"BigQuery":      ConnectorTypesBigQuery,
	"GoogleSheets":  ConnectorTypesGoogleSheets,
	"ElasticSearch": ConnectorTypesElasticSearch,
	"MongoDB":       ConnectorTypesMongoDB,
}

func (v ConnectorTypes) String() string {
	if s, ok := EnumNamesConnectorTypes[v]; ok {
		return s
	}
	return "ConnectorTypes(" + strconv.FormatInt(int64(v), 10) + ")"
}

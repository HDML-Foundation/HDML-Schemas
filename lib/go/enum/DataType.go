// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package enum

import "strconv"

/// Query data types enum.
type DataType int8

const (
	DataTypeInt8      DataType = 0
	DataTypeInt16     DataType = 1
	DataTypeInt32     DataType = 2
	DataTypeInt64     DataType = 3
	DataTypeUint8     DataType = 4
	DataTypeUint16    DataType = 5
	DataTypeUint32    DataType = 6
	DataTypeUint64    DataType = 7
	DataTypeFloat16   DataType = 8
	DataTypeFloat32   DataType = 9
	DataTypeFloat64   DataType = 10
	DataTypeDecimal   DataType = 11
	DataTypeDate      DataType = 12
	DataTypeTime      DataType = 13
	DataTypeTimestamp DataType = 14
	DataTypeBinary    DataType = 15
	DataTypeUtf8      DataType = 16
)

var EnumNamesDataType = map[DataType]string{
	DataTypeInt8:      "Int8",
	DataTypeInt16:     "Int16",
	DataTypeInt32:     "Int32",
	DataTypeInt64:     "Int64",
	DataTypeUint8:     "Uint8",
	DataTypeUint16:    "Uint16",
	DataTypeUint32:    "Uint32",
	DataTypeUint64:    "Uint64",
	DataTypeFloat16:   "Float16",
	DataTypeFloat32:   "Float32",
	DataTypeFloat64:   "Float64",
	DataTypeDecimal:   "Decimal",
	DataTypeDate:      "Date",
	DataTypeTime:      "Time",
	DataTypeTimestamp: "Timestamp",
	DataTypeBinary:    "Binary",
	DataTypeUtf8:      "Utf8",
}

var EnumValuesDataType = map[string]DataType{
	"Int8":      DataTypeInt8,
	"Int16":     DataTypeInt16,
	"Int32":     DataTypeInt32,
	"Int64":     DataTypeInt64,
	"Uint8":     DataTypeUint8,
	"Uint16":    DataTypeUint16,
	"Uint32":    DataTypeUint32,
	"Uint64":    DataTypeUint64,
	"Float16":   DataTypeFloat16,
	"Float32":   DataTypeFloat32,
	"Float64":   DataTypeFloat64,
	"Decimal":   DataTypeDecimal,
	"Date":      DataTypeDate,
	"Time":      DataTypeTime,
	"Timestamp": DataTypeTimestamp,
	"Binary":    DataTypeBinary,
	"Utf8":      DataTypeUtf8,
}

func (v DataType) String() string {
	if s, ok := EnumNamesDataType[v]; ok {
		return s
	}
	return "DataType(" + strconv.FormatInt(int64(v), 10) + ")"
}
